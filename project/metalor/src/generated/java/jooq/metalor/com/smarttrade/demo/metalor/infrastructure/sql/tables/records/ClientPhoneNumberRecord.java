/*
 * This file is generated by jOOQ.
 */
package com.smarttrade.demo.metalor.infrastructure.sql.tables.records;


import com.smarttrade.demo.metalor.infrastructure.sql.tables.ClientPhoneNumber;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientPhoneNumberRecord extends UpdatableRecordImpl<ClientPhoneNumberRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>metalor.client_phone_number.client_name</code>.
     */
    public ClientPhoneNumberRecord setClientName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>metalor.client_phone_number.client_name</code>.
     */
    public String getClientName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>metalor.client_phone_number.phone_number</code>.
     */
    public ClientPhoneNumberRecord setPhoneNumber(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>metalor.client_phone_number.phone_number</code>.
     */
    public String getPhoneNumber() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ClientPhoneNumber.CLIENT_PHONE_NUMBER.CLIENT_NAME;
    }

    @Override
    public Field<String> field2() {
        return ClientPhoneNumber.CLIENT_PHONE_NUMBER.PHONE_NUMBER;
    }

    @Override
    public String component1() {
        return getClientName();
    }

    @Override
    public String component2() {
        return getPhoneNumber();
    }

    @Override
    public String value1() {
        return getClientName();
    }

    @Override
    public String value2() {
        return getPhoneNumber();
    }

    @Override
    public ClientPhoneNumberRecord value1(String value) {
        setClientName(value);
        return this;
    }

    @Override
    public ClientPhoneNumberRecord value2(String value) {
        setPhoneNumber(value);
        return this;
    }

    @Override
    public ClientPhoneNumberRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientPhoneNumberRecord
     */
    public ClientPhoneNumberRecord() {
        super(ClientPhoneNumber.CLIENT_PHONE_NUMBER);
    }

    /**
     * Create a detached, initialised ClientPhoneNumberRecord
     */
    public ClientPhoneNumberRecord(String clientName, String phoneNumber) {
        super(ClientPhoneNumber.CLIENT_PHONE_NUMBER);

        setClientName(clientName);
        setPhoneNumber(phoneNumber);
    }
}
